---
version: 2.1

parameters:
    run_workflow_deploy:
        type: boolean
        default: true

std-filters: &std-filters
    filters:
        branches:
            ignore:
            - devel
            - tmp
        tags:
            only: /.*/

workflows:
    build_all:
        jobs:
        - build-armhf-stretch:
            <<: *std-filters
        - build-armhf-buster:
            <<: *std-filters
## Currently circleci does not build armf64 correctly due to no suitable docker image
##        - build-armhf-bionic-64:
##            <<: *std-filters
        - build-xenial:
            <<: *std-filters
        - build-bionic:
            <<: *std-filters
        - build-bionic-gtk3:
            <<: *std-filters
        - build-focal-gtk3:
            <<: *std-filters
        - build-buster:
            <<: *std-filters
        - build-flatpak-arm64:
            <<: *std-filters
        - build-flatpak-x86-2008:
            <<: *std-filters
        - build-flatpak-x86-1808:
            <<: *std-filters
        - build-macos:
            <<: *std-filters
        - build-macos-wx315:
            <<: *std-filters
        - build-android-arm64:
            <<: *std-filters
        - build-android-armhf:
            <<: *std-filters

orbs:
    cloudsmith: cloudsmith/cloudsmith@1.0.4

commands:
    deploy-code:
        parameters:
            install-python:
                type: boolean
                default: false
            use-orb:
                type: env_var_name
                default: DEPLOY_USE_ORB
        steps:
            - when:
                condition: <<pipeline.parameters.run_workflow_deploy>>
                steps:
                - when:
                    condition: <<parameters.install-python>>
                    steps:
                    - run: sudo apt install software-properties-common
                    - run: sudo add-apt-repository ppa:deadsnakes/ppa -y
                    - run: sudo apt update
                    - run: sudo apt install -y python3.7
                    - run: ls -la /usr/bin/python*
                    - run: sudo rm /usr/bin/python3
                    - run: sudo ln -s /usr/bin/python3.7 /usr/bin/python3
                    - run: ls -la /usr/bin/python*
                    - run: sudo apt install -y python3.7 python3-pip
                - when:
                    condition: <<parameters.use-orb>>
                    steps:
                    - cloudsmith/ensure-api-key
                    - cloudsmith/install-cli
                - run: ci/cloudsmith-upload.sh
    # add - use-apt-proxy before the '- run: ci/circleci-build*.sh' if building locally and there is an apt proxy available. It will speed up the build considerably if on a slow connection.
    use-apt-proxy:
        parameters:
            use-proxy:
                type: boolean
                default: true
        steps:
            - when:
                condition: <<parameters.use-proxy>>
                steps:
                - run: echo "Acquire::http::Proxy \"http://192.168.1.1:3142\";" | sudo tee -a /etc/apt/apt.conf.d/00aptproxy

jobs:
    build-armhf-stretch:
        machine:
            image: ubuntu-2004:202104-01
        environment:
        - OCPN_TARGET=stretch-armhf
        - DOCKER_IMAGE=balenalib/raspberry-pi-debian:stretch
        - BUILD_FLAGS=-j3
        - BUILD_ENV=raspbian
        - DEPLOY_USE_ORB: true
        steps:
        - checkout
        - run: chmod a+x ./ci/*.sh
        - run:
            command: ci/circleci-build-raspbian-armhf.sh
            no_output_timeout: 30m
        - deploy-code
    build-armhf-buster:
        machine:
            image: ubuntu-2004:202104-01
        environment:
        - OCPN_TARGET=buster-armhf
        - DOCKER_IMAGE=balenalib/raspberry-pi-debian:buster
        - BUILD_FLAGS=-j3
        - BUILD_ENV=raspbian
        - DEPLOY_USE_ORB: true
        steps:
        - checkout
        - run: chmod a+x ./ci/*.sh
        - run:
            command: ci/circleci-build-raspbian-armhf.sh
            no_output_timeout: 30m
        - deploy-code
    build-armhf-bionic-64:
        machine:
            image: ubuntu-2004:202104-01
        environment:
        - OCPN_TARGET=bionic-arm64
        - OCPN_BRANCH=master
        - DOCKER_IMAGE=arm64v8/ubuntu:18.04
        - BUILD_FLAGS=-j3
        - BUILD_ENV=ubuntu
        - DEPLOY_USE_ORB: false
        steps:
        - checkout
        - run: chmod a+x ./ci/*.sh
        - run:
            command: ci/circleci-build-raspbian-armhf.sh
            no_output_timeout: 30m
        - when:
            condition: <<pipeline.parameters.run_workflow_deploy>>
            steps:
            - run: ci/cloudsmith-upload.sh
    build-xenial:
        docker:
        - image: circleci/buildpack-deps:xenial-scm
        environment:
        - OCPN_TARGET:  xenial
        - DEPLOY_USE_ORB: true
        steps:
        - checkout
        - run: >
            echo "deb-src http://us.archive.ubuntu.com/ubuntu/ xenial main"
            | sudo tee -a /etc/apt/sources.list
        - run: >
            echo "deb-src http://us.archive.ubuntu.com/ubuntu/ xenial-updates main"
            | sudo tee -a /etc/apt/sources.list
        - run: cat /etc/apt/sources.list
        - run: chmod a+x ci/*.sh
        - run: ci/circleci-build-debian.sh
        - deploy-code:
            install-python: true
    build-bionic:
        docker:
        - image: cimg/base:stable-18.04
        environment:
        - OCPN_TARGET:  bionic
        - DEPLOY_USE_ORB: true
        steps:
        - checkout
        - run: >
            echo "deb-src http://us.archive.ubuntu.com/ubuntu/ bionic main"
            | sudo tee -a /etc/apt/sources.list#    build_15:
        - run: >
            echo "deb-src http://us.archive.ubuntu.com/ubuntu/ bionic-updates main"
            | sudo tee -a /etc/apt/sources.list
        - run: cat /etc/apt/sources.list
        - run: chmod a+x ci/*.sh
        - run: ci/circleci-build-debian.sh
        - deploy-code
    build-bionic-gtk3:
        docker:
        - image: cimg/base:stable-18.04
        environment:
        - BUILD_GTK3: true
        - OCPN_TARGET:  bionic-gtk3
        - DEPLOY_USE_ORB: true
        steps:
        - checkout
        - run: >
            echo "deb-src http://us.archive.ubuntu.com/ubuntu/ bionic main"
            | sudo tee -a /etc/apt/sources.list
        - run: >
            echo "deb-src http://us.archive.ubuntu.com/ubuntu/ bionic-updates main"
            | sudo tee -a /etc/apt/sources.list
        - run: cat /etc/apt/sources.list
        - run: chmod a+x ci/*.sh
        - run: ci/circleci-build-debian.sh
        - deploy-code
    build-focal-gtk3:
        docker:
        - image: cimg/base:stable-20.04
        environment:
        - BUILD_GTK3: true
        - OCPN_TARGET: focal-gtk3
        - DEPLOY_USE_ORB: true
        steps:
        - checkout
        - run: >
            echo "deb-src http://us.archive.ubuntu.com/ubuntu/ focal main" | sudo tee -a /etc/apt/sources.list
        - run: >
            echo "deb-src http://us.archive.ubuntu.com/ubuntu/ focal-updates main" | sudo tee -a /etc/apt/sources.list
        - run: cat /etc/apt/sources.list
        - run: chmod a+x ci/*.sh
        - run: ci/circleci-build-debian.sh
        - deploy-code
    build-buster:
        docker:
        - image: circleci/buildpack-deps:buster-scm
        environment:
        - OCPN_TARGET:  buster
        - DEPLOY_USE_ORB: true
        steps:
        - checkout
        - run: >
            echo "deb-src http://ftp.us.debian.org/debian buster main"
            | sudo tee -a /etc/apt/sources.list
        - run: >
            echo "deb-src http://ftp.us.debian.org/debian buster-updates main"
            | sudo tee -a /etc/apt/sources.list
        - run: cat /etc/apt/sources.list
        - run: chmod a+x ci/*.sh
        - run: ci/circleci-build-debian.sh
        - deploy-code
    build-flatpak:
        machine:
            image: ubuntu-2004:202010-01
        environment:
        - OCPN_TARGET:  flatpak
        - FLATPAK_BRANCH: stable
        - CLOUDSMITH_PKG_EXT: gz
        - SDK_VER: 20.08
        steps:
        - checkout
        - run: chmod a+x ci/*.sh
        - run: bash ci/circleci-build-flatpak.sh
        - when:
            condition: <<pipeline.parameters.run_workflow_deploy>>
            steps:
            - run: ci/cloudsmith-upload.sh
    build-flatpak-x86-1808:
        machine:
            image: ubuntu-2004:202010-01
        environment:
        - OCPN_TARGET:  flatpak
        - FLATPAK_BRANCH: stable
        - CLOUDSMITH_PKG_EXT: gz
        - SDK_VER: 18.08
        - DEPLOY_USE_ORB: true
        steps:
        - checkout
        - run: chmod a+x ci/*.sh
        - run: bash ci/circleci-build-flatpak.sh
        - deploy-code
    build-flatpak-x86-2008:
        machine:
            image: ubuntu-2004:202010-01
        environment:
        - OCPN_TARGET:  flatpak
        - FLATPAK_BRANCH: beta
        - CLOUDSMITH_PKG_EXT: gz
        - SDK_VER: 20.08
        - DEPLOY_USE_ORB: true
        steps:
        - checkout
        - run: chmod a+x ci/*.sh
        - run:
            command: bash ci/circleci-build-flatpak.sh
            no_output_timeout: 30m
        - deploy-code
    build-flatpak-arm64:
        machine:
            image: ubuntu-2004:202101-01
        resource_class: arm.medium
        environment:
        - OCPN_TARGET:  flatpak-arm64
        - FLATPAK_BRANCH: beta
        - CLOUDSMITH_PKG_EXT: gz
        - SDK_VER: 20.08
        - DEPLOY_USE_ORB: true
        steps:
        - checkout
        - run: chmod a+x ci/*.sh
        - run: bash ci/circleci-build-flatpak.sh
        - deploy-code
    build-macos:
        macos:
            xcode: "12.5.1"
        environment:
        - OCPN_TARGET:  macos
        - CLOUDSMITH_PKG_EXT: pkg
        - DEPLOY_USE_ORB: true
        - WXVERSION: 312
        steps:
        - checkout
        - run: chmod a+x ci/*.sh
        - run: bash ci/circleci-build-macos.sh
        - deploy-code
    build-macos-wx315:
        macos:
            xcode: "12.5.1"
        environment:
        - OCPN_TARGET:  macos
        - CLOUDSMITH_PKG_EXT: pkg
        - DEPLOY_USE_ORB: true
        - WXVERSION: 315
        steps:
        - checkout
        - run: chmod a+x ci/*.sh
        - run: bash ci/circleci-build-macos.sh
        - deploy-code
    build-android-arm64:
        docker:
        - image: cimg/android:2021.10.2-ndk
        resource_class: large
        environment:
        - OCPN_TARGET:  android-arm64
        - DEPLOY_USE_ORB: true
        steps:
        - checkout
        - run: chmod a+x ci/*.sh
        - run: bash ci/circleci-build-android-arm64.sh
        - deploy-code:
            install-python: true
    build-android-armhf:
        docker:
        - image: cimg/android:2021.10.2-ndk
        resource_class: large
        environment:
        - OCPN_TARGET:  android-armhf
        - DEPLOY_USE_ORB: true
        steps:
        - checkout
        - run: chmod a+x ci/*.sh
        - run: bash ci/circleci-build-android-armhf.sh
        - deploy-code:
            install-python: true

